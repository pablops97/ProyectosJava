/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ConsultaOperaciones;
import Controlador.MError;
import Controlador.MiExcepcion;
import Modelo.Usuario;
import com.aeat.valida.Validador;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ConoMaster
 */
public class PanelRegistro extends javax.swing.JPanel {

    /**
     * Creates new form PanelRegistro
     */
    boolean nifValidado = false;
    String nombreFotoURL;
    public PanelRegistro() {
        initComponents();
        
        checkMostrarContrasenia.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    // Mostrar la contrase単a
                    contraseniaField.setEchoChar((char) 0);
                } else {
                    // Ocultar la contrase単a
                    contraseniaField.setEchoChar('*');
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nifField = new javax.swing.JTextField();
        userField = new javax.swing.JTextField();
        nombreCompletoField = new javax.swing.JTextField();
        contraseniaField = new javax.swing.JPasswordField();
        botoElegirImagen = new javax.swing.JButton();
        nombreFoto = new javax.swing.JLabel();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        botonVerificar = new javax.swing.JButton();
        fieldVerificacion = new javax.swing.JLabel();
        checkMostrarContrasenia = new javax.swing.JCheckBox();

        jLabel1.setFont(new java.awt.Font("Unispace", 0, 24)); // NOI18N
        jLabel1.setText("Registro de nuevo usuario");

        jLabel2.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel2.setText("NIF");

        jLabel3.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel3.setText("Nombre de usuario");

        jLabel4.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel4.setText("Contrase単a");

        jLabel5.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel5.setText("Nombre completo");

        botoElegirImagen.setText("Elegir Imagen");
        botoElegirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoElegirImagenActionPerformed(evt);
            }
        });

        nombreFoto.setText("Ninguna foto seleccionada");

        botonAceptar.setText("ACEPTAR");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("CANCELAR");

        botonVerificar.setText("Verificar");
        botonVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerificarActionPerformed(evt);
            }
        });

        fieldVerificacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        checkMostrarContrasenia.setText("Ver contrase単a");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botoElegirImagen)
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nombreFoto)
                        .addGap(299, 299, 299))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonAceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(nifField))
                                    .addComponent(jLabel1)
                                    .addComponent(nombreCompletoField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userField)
                                    .addComponent(contraseniaField))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(fieldVerificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkMostrarContrasenia))
                            .addComponent(botonVerificar))
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(75, 75, 75)
                .addComponent(fieldVerificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nifField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonVerificar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(contraseniaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkMostrarContrasenia))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nombreCompletoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(botoElegirImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombreFoto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botoElegirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoElegirImagenActionPerformed
        
        nombreFotoURL = seleccionarFoto();
        nombreFoto.setText(nombreFotoURL);
    }//GEN-LAST:event_botoElegirImagenActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
    
    String nif = nifField.getText();
    String nombreCompleto = nombreCompletoField.getText();
    String contrasenia = contraseniaField.getText();
    String nombreUsuario = userField.getText();

    
    if(!nombreFoto.getText().isEmpty() && !nifField.getText().isEmpty() && !nombreCompletoField.getText().isEmpty() && !contraseniaField.getText().isEmpty() && !userField.getText().isEmpty()){
        try {
            Usuario nuevoUser = new Usuario(nif, nombreUsuario, contrasenia, nombreCompleto, nombreFotoURL);
            ConsultaOperaciones operaciones = new ConsultaOperaciones();
            operaciones.operacionInsert("INSERT INTO USUARIO(NIF, NOMBRE_USUARIO, CONTRASENIA, NOMBRE, FOTO) VALUES ('" + nuevoUser.getNif() + 
                    "', '" + nuevoUser.getUsuario() + 
                    "', '" + nuevoUser.getContrasenia() +
                    "', '" + nuevoUser.getNombre() +
                    "', '" + nuevoUser.getFoto() + "')");
            JOptionPane.showMessageDialog(this, "Usuario registrado con 辿xito!");
            this.setVisible(false);
        } catch (MiExcepcion ex) {
            JOptionPane.showMessageDialog(this, MError.getMensaje(ex.getCodigo()));
            MError.CreadorLog(MError.getMensaje(ex.getCodigo()));
        }
    }else{
        JOptionPane.showMessageDialog(this, "No pueden haber campos vacios");
    }
    
    
    
    
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerificarActionPerformed
        try {
            Validador v = new Validador();
            if (v.checkNif(nifField.getText()) > 0) {
                JOptionPane.showMessageDialog(this, "El NIF es valido");
            } else {
                int codigoDeError = 105;
                throw new MiExcepcion(codigoDeError);
            }
        } catch (MiExcepcion e) {
            // Manejar la excepci坦n aqu鱈, por ejemplo, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, MError.getMensaje(e.getCodigo()));
        }
    }//GEN-LAST:event_botonVerificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoElegirImagen;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonVerificar;
    private javax.swing.JCheckBox checkMostrarContrasenia;
    private javax.swing.JPasswordField contraseniaField;
    private javax.swing.JLabel fieldVerificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nifField;
    private javax.swing.JTextField nombreCompletoField;
    private javax.swing.JLabel nombreFoto;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables


    private String seleccionarFoto() {

        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Imagen (.jpg)", "jpg");
        fileChooser.setFileFilter(filter);
        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            

            try {
                // Crear la carpeta "Imagenes" si no existe
                File archivoSeleccionado = fileChooser.getSelectedFile();
                String nombreArchivo = archivoSeleccionado.getName();

                // Obtener el directorio del proyecto
                String destino = System.getProperty("user.dir") + "\\src\\Imagen\\" + nombreArchivo;
                System.out.println(destino);
                Path destinoRuta = Paths.get(destino);

                String Orig = archivoSeleccionado.getPath();
                Path origen = Paths.get(Orig);

                Files.copy(origen, destinoRuta, REPLACE_EXISTING);
                return nombreArchivo;
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al copiar la imagen", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } else {
            return "default.jpg";
        }
        return null;
    }

}
